apply plugin: 'com.android.library'
apply from: '../gradle/plugins/checkstyle-android.gradle'
apply from: '../gradle/plugins/findbugs-android.gradle'
apply plugin: 'jacoco'

repositories {
    jcenter()
    google()
}

dependencies {
    implementation 'org.apache.james:apache-mime4j-core:0.7.2'
    implementation 'org.apache.james:apache-mime4j-dom:0.7.2'
    implementation 'commons-io:commons-io:2.4'
    implementation 'com.jcraft:jzlib:1.0.7'
    implementation 'com.beetstra.jutf7:jutf7:1.0.0'

    androidTestImplementation 'com.android.support.test:runner:0.4.1'
    androidTestImplementation 'com.madgag.spongycastle:pg:1.51.0.0'

    testImplementation 'com.squareup.okio:okio:1.6.0'
    testImplementation 'org.robolectric:robolectric:3.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // for using Apache HTTP Client
    //useLibrary 'org.apache.http.legacy'

    buildTypes {
        debug {
            testCoverageEnabled rootProject.testCoverage
        }
    }

    lintOptions {
        abortOnError false
        lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }
}
