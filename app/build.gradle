//apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
//apply from: '../gradle/plugins/checkstyle-android.gradle'
//apply from: '../gradle/plugins/findbugs-android.gradle'
apply plugin: 'jacoco'

repositories {
    jcenter()
    google()
}

dependencies {
    implementation project(':k9mail-library')
    implementation project(':plugins:Android-PullToRefresh:library')
    implementation project(':plugins:HoloColorPicker')
    implementation 'me.leolin:ShortcutBadger:1.1.3@aar'
    androidTestImplementation 'com.android.support.test:testing-support-lib:0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation('com.icegreen:greenmail:1.4.1') {
        exclude group: 'junit'
    }
    testImplementation('org.robolectric:robolectric:3.0-rc3') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation('junit:junit:4.10') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    implementation 'commons-io:commons-io:2.4'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:support-v13:28.0.0'
    implementation 'net.sourceforge.htmlcleaner:htmlcleaner:2.10'
    implementation 'de.cketti.library.changelog:ckchangelog:1.2.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'org.sufficientlysecure:openpgp-api:8.0'
    compileOnly 'de.robv.android.xposed:api:82'
    implementation 'org.apache.james:apache-mime4j-core:0.7.2'
    implementation 'org.apache.james:apache-mime4j-dom:0.7.2'
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            if (project.hasProperty('storeFile')) {
                signingConfig signingConfigs.release
            }
            buildConfigField "boolean", "DEVELOPER_MODE", "false"
        }
        debug {
            applicationIdSuffix ".debug"
            //testCoverageEnabled rootProject.testCoverage
            buildConfigField "boolean", "DEVELOPER_MODE", "true"
        }
    }

    // Do not abort build if lint finds errors
    lintOptions {
        abortOnError false
        lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/README'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}
if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
